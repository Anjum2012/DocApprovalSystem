// <auto-generated />
using System;
using DocumentAccessApproval.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentAccessApproval.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.AccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessType")
                        .HasColumnType("int");

                    b.Property<string>("ApproverComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApproverUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestorUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("RequestorUserId", "DocumentId")
                        .IsUnique();

                    b.ToTable("AccessRequests");
                });

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Quarterly financial analysis and projections",
                            Title = "Q4 Financial Report"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Company policies and procedures",
                            Title = "Employee Handbook"
                        },
                        new
                        {
                            Id = 3,
                            Description = "5-year strategic business plan",
                            Title = "Strategic Plan 2024"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Product technical documentation",
                            Title = "Technical Specifications"
                        });
                });

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@company.com",
                            Name = "John Doe",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@company.com",
                            Name = "Jane Smith",
                            Role = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob.wilson@company.com",
                            Name = "Bob Wilson",
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "alice.johnson@company.com",
                            Name = "Alice Johnson",
                            Role = 3
                        });
                });

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.AccessRequest", b =>
                {
                    b.HasOne("DocumentAccessApproval.Domain.Entities.User", "ApproverUser")
                        .WithMany("ApprovedAccesses")
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DocumentAccessApproval.Domain.Entities.Document", "Document")
                        .WithMany("AccessRequests")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DocumentAccessApproval.Domain.Entities.User", "RequestorUser")
                        .WithMany("RequestedAccesses")
                        .HasForeignKey("RequestorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApproverUser");

                    b.Navigation("Document");

                    b.Navigation("RequestorUser");
                });

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.Document", b =>
                {
                    b.Navigation("AccessRequests");
                });

            modelBuilder.Entity("DocumentAccessApproval.Domain.Entities.User", b =>
                {
                    b.Navigation("ApprovedAccesses");

                    b.Navigation("RequestedAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
